-- Create schema to keep things organized
CREATE OR REPLACE SCHEMA MANAGE_DB.PIPES

-- Define pipe
CREATE OR REPLACE PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE
auto_ingest = TRUE
AS
COPY INTO EXERCISE_DB.PUBLIC.EMPLOYEES
FROM @MANAGE_DB.EXTERNAL_STAGES.CSV_BUCKET

-- Describe pipe
DESC PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE
 
-- Validate pipe is actually working
SELECT SYSTEM$PIPE_STATUS('MANAGE_DB.PIPES.EMPLOYEE_PIPE')

-- Snowpipe error message
SELECT * FROM TABLE(VALIDATE_PIPE_LOAD(
    PIPE_NAME => 'MANAGE_DB.PIPES.EMPLOYEE_PIPE',
    START_TIME => DATEADD(HOUR,-2,CURRENT_TIMESTAMP())))

-- COPY command history from table to see error massage
SELECT * FROM TABLE (INFORMATION_SCHEMA.COPY_HISTORY(
   table_name  =>  'EXERCISE_DB.PUBLIC.EMPLOYEES',
   START_TIME =>DATEADD(HOUR,-2,CURRENT_TIMESTAMP())))
   
---- Manage pipes ----

DESC pipe MANAGE_DB.PIPES.EMPLOYEE_PIPE;

SHOW PIPES;

SHOW PIPES like '%employee%'

SHOW PIPES in database MANAGE_DB

SHOW PIPES in schema MANAGE_DB.PIPES

SHOW PIPES like '%employee%' in Database MANAGE_DB

-- Changing pipe (alter stage or file format) --

-- Pause pipe
ALTER PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE SET PIPE_EXECUTION_PAUSED = true
 
-- Verify pipe is paused and has pendingFileCount 0 
SELECT SYSTEM$PIPE_STATUS('MANAGE_DB.PIPES.EMPLOYEE_PIPE') 
 
-- Recreate the pipe to change the COPY statement in the definition
CREATE OR REPLACE PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE
auto_ingest = TRUE
AS
COPY INTO MANAGE_DB.PUBLIC.EMPLOYEES2
FROM @MANAGE_DB.EXTERNAL_STAGES.CSV_BUCKET  

ALTER PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE refresh

-- Reload files manually that where aleady in the bucket
COPY INTO EXERCISE_DB.PUBLIC.EMPLOYEES2
FROM @MANAGE_DB.EXTERNAL_STAGES.CSV_BUCKET

// Resume pipe
ALTER PIPE MANAGE_DB.PIPES.EMPLOYEE_PIPE SET PIPE_EXECUTION_PAUSED = false

// Verify pipe is running again
SELECT SYSTEM$PIPE_STATUS('MANAGE_DB.PIPES.EMPLOYEE_PIPE') 
